Metadata-Version: 2.1
Name: flask-mailing
Version: 0.0.4
Summary: Flask mail system sending mails(individual, bulk) attachments(individual, bulk) asynchroniously.
Home-page: https://github.com/marktennyson/flask-mailing
License: MIT
Keywords: flask,mail,smtp,flask-mail,flask-mailing,flask-mailman
Author: Aniket Sarkar
Author-email: aniketsarkar@yahoo.com
Classifier: Development Status :: 4 - Beta
Classifier: Framework :: Flask
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Communications :: Email
Classifier: Topic :: Software Development :: Build Tools
Provides-Extra: dev
Provides-Extra: doc
Provides-Extra: test
Requires-Dist: aioredis (>=2.0.0)
Requires-Dist: aiosmtplib (>=1.1.6)
Requires-Dist: asgiref (>=3.4.1)
Requires-Dist: black (>=21.5b2,<22.0); extra == "test"
Requires-Dist: blinker (>=1.4)
Requires-Dist: bump2version (>=1.0.1,<2.0.0); extra == "dev"
Requires-Dist: email-validator (>=1.1.3)
Requires-Dist: flake8 (>=3.9.2,<4.0.0); extra == "test"
Requires-Dist: isort (>=5.8.0,<6.0.0); extra == "test"
Requires-Dist: pip (>=20.3.1,<21.0.0); extra == "dev"
Requires-Dist: pre-commit (>=2.12.0,<3.0.0); extra == "dev"
Requires-Dist: pydantic (>=1.8.2)
Requires-Dist: pytest (>=6.2.4,<7.0.0); extra == "test"
Requires-Dist: pytest-cov (>=2.12.0,<3.0.0); extra == "test"
Requires-Dist: toml (>=0.10.2,<0.11.0); extra == "dev"
Requires-Dist: tox (>=3.20.1,<4.0.0); extra == "dev"
Requires-Dist: twine (>=3.3.0,<4.0.0); extra == "dev"
Requires-Dist: typing-extensions (>=3.10.0.0)
Requires-Dist: virtualenv (>=20.2.2,<21.0.0); extra == "dev"
Project-URL: Repository, https://github.com/marktennyson/flask-mailing
Description-Content-Type: text/markdown

# Flask-Mailing
Flask-Mailing adds SMTP mail sending to your Flask applications

Flask_Mail is dead now. To use the mail service with your project you can use eaither [Flask-Mailing](https://github.com/marktennyson/flask-mailing) for legacy or [Flask-Mailman](https://github.com/waynerv/flask-mailman) for Django type implementation.

Flask-Mailing is a fork of `Sabuhi's` Fastapi-Mail package, providing similar functionality. 99% of the work was done by him, and the fork was made mainly provide the same features and the apis for the Flask Microframework.

##### Need help to create and deploy the test cases.(Urgent)

###  ðŸ”¨  Installation ###

```bash
 pip install flask-mailing
```
or install from source code
```bash
git clone https://github.com/marktennyson/flask-mailing.git && cd flask-mailing
python setup.py install
```

---
**Documentation**: [Flask-MAILING](https://marktennyson.github.io/flask-mailing)
---

The key features are:

-  sending emails with either with Flask or using asyncio module 
-  sending files either from form-data or files from server
-  Using Jinja2 HTML Templates
-  email utils (utility allows you to check temporary email addresses, you can block any email or domain)
-  email utils has two available classes ```DefaultChecker``` and  ```WhoIsXmlApi```
-  Unittests using Mail

More information on [Getting-Started](https://marktennyson.github.io/flask-mailing/getting-started)

### Guide


```python

from flask import Flask, jsonify
from flask_mailing import Mail, Message


app = Flask(__name__)

app.config['MAIL_USERNAME'] = "YourUserName"
app.config['MAIL_PASSWORD'] = "strong_password"
app.config['MAIL_PORT'] = 587
app.config['MAIL_SERVER'] = "your mail server"
app.config['MAIL_TLS'] = True
app.config['MAIL_SSL'] = False
app.config['USE_CREDENTIALS'] = True
app.config['VALIDATE_CERTS'] = True

mail = Mail(app)

html = """
<p>Thanks for using Flask-Mailing</p> 
"""


@app.post("/email")
async def simple_send() -> JSONResponse:

    message = Message(
        subject="Flask-Mailing module",
        recipients=["recipients@email-domain.com"],  # List of recipients, as many as you can pass 
        body=html,
        subtype="html"
        )

    await mail.send_message(message)
    return jsonify(status_code=200, content={"message": "email has been sent"})     
```

## List of Examples

For more examples of using flask-mailing please check [example](https://marktennyson.github.io/flask-mailing/example/) section

# Contributing
Feel free to open issues and send pull requests.

## Contributors âœ¨

Thanks goes to these wonderful people ([ðŸš§]):


<table>
<tr>
    <td align="center"><a href="https://github.com/marktennyson"><img src="https://avatars.githubusercontent.com/u/46404058?v=4" width="100px;" alt=""/><br /><sub><b>Aniket Sarkar</b></sub></a><br /><a href="#maintenance-tbenning" title="Answering Questions">ðŸ’¬</a> <a href="https://github.com/marktennyson/flask-mailing" title="Reviewed Pull Requests">ðŸ‘€</a> <a href="#maintenance-jakebolam" title="Maintenance">ðŸš§</a></td>
</tr>
</table>

This project follows the [all-contributors](https://allcontributors.org) specification.
Contributions of any kind are welcome!

Before you start please read [CONTRIBUTING](https://github.com/marktennyson/flask-mailing/blob/main/CONTRIBUTING.md)



## LICENSE

[MIT](LICENSE)

